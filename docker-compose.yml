version: '3.9'

services:
  # ======================
  # MySQL Database
  # ======================
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  # ======================
  # Redis
  # ======================
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  # ======================
  # User Service
  # ======================
  user-service:
    build: ./user-service
    container_name: user-service
    restart: always
    env_file: .env
    depends_on:
      - mysql
      - redis
    ports:
      - "3001:3001"   # Expose User Service
    networks:
      - app-network

  # ======================
  # Recordings Service
  # ======================
  recordings-service:
    build: ./recordings-service
    container_name: recordings-service
    restart: always
    env_file: .env
    depends_on:
      - mysql
      - redis
    ports:
      - "3002:3002"   # Expose Recordings Service
    networks:
      - app-network

  # ======================
  # Auth Service
  # ======================
  auth-service:
    build: ./auth-service
    container_name: auth-service
    restart: always
    env_file: .env
    depends_on:
      - mysql
      - redis
    ports:
      - "3003:3003"   # Expose Auth Service
    networks:
      - app-network

  # ======================
  # API Gateway
  # ======================
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: always
    env_file: .env
    ports:
      - "6000:6000"
    depends_on:
      - user-service
      - recordings-service
      - auth-service
      - redis
    networks:
      - app-network

# ======================
# Volumes & Networks
# ======================
volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
